<application>
  <component name="DslActivationStatus">
    <option name="entries">
      <Entry url="file://$APPLICATION_HOME_DIR$/plugins/Groovy/lib/standardDsls/newifyTransform.gdsl" status="ERROR" error="com.intellij.openapi.project.IndexNotReadyException: Please change caller according to com.intellij.openapi.project.IndexNotReadyException documentation&#10;&#9;at com.intellij.util.indexing.FileBasedIndexImpl.handleDumbMode(FileBasedIndexImpl.java:750)&#10;&#9;at com.intellij.util.indexing.FileBasedIndexImpl.ensureUpToDate(FileBasedIndexImpl.java:698)&#10;&#9;at com.intellij.util.indexing.FileBasedIndexImpl.processExceptions(FileBasedIndexImpl.java:827)&#10;&#9;at com.intellij.util.indexing.FileBasedIndexImpl.processValuesImpl(FileBasedIndexImpl.java:905)&#10;&#9;at com.intellij.util.indexing.FileBasedIndexImpl.getContainingFiles(FileBasedIndexImpl.java:787)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.toplevel.AnnotatedContextFilter.containsString(AnnotatedContextFilter.java:72)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.toplevel.AnnotatedContextFilter.lambda$null$0(AnnotatedContextFilter.java:61)&#10;&#9;at com.intellij.util.containers.ConcurrentFactoryMap$1.create(ConcurrentFactoryMap.java:38)&#10;&#9;at com.intellij.util.containers.FactoryMap.get(FactoryMap.java:56)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.toplevel.AnnotatedContextFilter.isApplicable(AnnotatedContextFilter.java:51)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.GroovyDslScript.isApplicable(GroovyDslScript.java:124)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.GroovyDslScript.addGdslMembers(GroovyDslScript.java:89)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.GroovyDslScript.processExecutor(GroovyDslScript.java:70)&#10;&#9;at org.jetbrains.plugins.groovy.dsl.GroovyDslFileIndex.processExecutors(GroovyDslFileIndex.java:261)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.NonCodeMembersContributor.runContributors(NonCodeMembersContributor.java:107)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.processNonCodeMembers(ResolveUtil.java:311)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.processScopeNonCodeMembers(ResolveUtil.java:212)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.doProcessDeclarations(ResolveUtil.java:168)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.lambda$doTreeWalkUp$0(ResolveUtil.java:138)&#10;&#9;at com.intellij.psi.util.PsiTreeUtil.treeWalkUp(PsiTreeUtil.java:1063)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.doTreeWalkUp(ResolveUtil.java:136)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.treeWalkUp(ResolveUtil.java:121)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.ResolveUtil.treeWalkUp(ResolveUtil.java:104)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceResolveRunnerKt.resolveReferenceExpression(GrReferenceResolveRunner.kt:37)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl._resolve(GrReferenceExpressionImpl.java:514)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.doPolyResolve(GrReferenceExpressionImpl.java:483)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.access$000(GrReferenceExpressionImpl.java:66)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl$1.resolve(GrReferenceExpressionImpl.java:205)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl$1.resolve(GrReferenceExpressionImpl.java:201)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache$3.compute(ResolveCache.java:142)&#10;&#9;at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolve(ResolveCache.java:139)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:167)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:159)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.InferenceContext$1.multiResolve(InferenceContext.java:64)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.multiResolve(GrReferenceExpressionImpl.java:601)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.GrReferenceElement.advancedResolve(GrReferenceElement.java:44)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.GrReferenceElement.resolve(GrReferenceElement.java:39)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.PsiImplUtil.getRuntimeQualifier(PsiImplUtil.java:289)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.PsiImplUtil.getQualifierType(PsiImplUtil.java:977)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.processors.GroovyResolverProcessor.&lt;init&gt;(GroovyResolverProcessor.java:97)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.processors.GroovyResolverProcessorImpl.&lt;init&gt;(GroovyResolverProcessorImpl.java:42)&#10;&#9;at org.jetbrains.plugins.groovy.lang.resolve.processors.GroovyResolverProcessorBuilder.build(GroovyResolverProcessorBuilder.java:41)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl._resolve(GrReferenceExpressionImpl.java:513)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.doPolyResolve(GrReferenceExpressionImpl.java:483)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.access$000(GrReferenceExpressionImpl.java:66)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl$1.resolve(GrReferenceExpressionImpl.java:205)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl$1.resolve(GrReferenceExpressionImpl.java:201)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache$3.compute(ResolveCache.java:142)&#10;&#9;at com.intellij.openapi.util.RecursionManager$2.doPreventingRecursion(RecursionManager.java:112)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolve(ResolveCache.java:139)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:167)&#10;&#9;at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:159)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.InferenceContext$1.multiResolve(InferenceContext.java:64)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.GrReferenceExpressionImpl.multiResolve(GrReferenceExpressionImpl.java:601)&#10;&#9;at org.jetbrains.plugins.groovy.lang.psi.GrReferenceElement.advancedResolve(GrReferenceElement.java:44)&#10;&#9;at org.jetbrains.plugins.groovy.editor.GroovyReferenceCopyPasteProcessor.addReferenceData(GroovyReferenceCopyPasteProcessor.java:44)&#10;&#9;at com.intellij.codeInsight.editorActions.CopyPasteReferenceProcessor.collectTransferableData(CopyPasteReferenceProcessor.java:60)&#10;&#9;at com.intellij.codeInsight.editorActions.CopyHandler.lambda$doExecute$0(CopyHandler.java:94)&#10;&#9;at com.intellij.openapi.project.DumbService.withAlternativeResolveEnabled(DumbService.java:256)&#10;&#9;at com.intellij.codeInsight.editorActions.CopyHandler.doExecute(CopyHandler.java:92)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorActionHandler$4.perform(EditorActionHandler.java:217)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorActionHandler.doIfEnabled(EditorActionHandler.java:109)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorActionHandler.execute(EditorActionHandler.java:214)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorAction.lambda$actionPerformed$0(EditorAction.java:100)&#10;&#9;at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(CoreCommandProcessor.java:129)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:109)&#10;&#9;at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:88)&#10;&#9;at com.intellij.openapi.actionSystem.ex.ActionUtil$1.run(ActionUtil.java:197)&#10;&#9;at com.intellij.openapi.actionSystem.ex.ActionUtil.performActionDumbAware(ActionUtil.java:213)&#10;&#9;at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$1.performAction(IdeKeyEventDispatcher.java:587)&#10;&#9;at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.lambda$processAction$2(IdeKeyEventDispatcher.java:634)&#10;&#9;at com.intellij.openapi.application.TransactionGuardImpl.performUserActivity(TransactionGuardImpl.java:199)&#10;&#9;at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processAction(IdeKeyEventDispatcher.java:633)&#10;&#9;at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.inInitState(IdeKeyEventDispatcher.java:477)&#10;&#9;at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.dispatchKeyEvent(IdeKeyEventDispatcher.java:211)&#10;&#9;at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:609)&#10;&#9;at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:387)&#10;&#9;at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)&#10;&#9;at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)&#10;&#9;at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)&#10;&#9;at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)&#10;&#9;at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)&#10;&#9;at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)&#10;" />
    </option>
  </component>
</application>